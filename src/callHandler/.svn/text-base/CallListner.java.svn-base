package callHandler;

import java.util.ArrayList;

import dataLayer.DatabaseHelper;
import LocationHandler.LocationDetatil;
import SMSHandler.SMSManager;
import SMSHandler.SMSSender;
import android.app.PendingIntent;
import android.content.ContentResolver;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.net.Uri;
import android.os.Build;
import android.provider.Settings;
import android.telephony.PhoneStateListener;
import android.telephony.gsm.SmsManager;
import android.util.Log;

public class CallListner extends PhoneStateListener {
	public Context context;
	DatabaseHelper dbhelper;
	LocationDetatil locationDetail;

	@Override
	public void onCallStateChanged(int state, String incomingNumber) {
		System.out.println("Call listner is working perfectiy");
		System.out.println("The incomming  call number is :" + incomingNumber);
		System.out.println("The state int is "+state);
		if(state==1){
			
			locationDetail = LocationDetatil.getInstance();
			dbhelper = new DatabaseHelper(context);

			if (isBlocked(locationDetail.getLatitude(),locationDetail.getLongtitude(),getContactName(incomingNumber, context.getContentResolver()))) {

				/*
				 * PendingIntent pi = PendingIntent.getActivity(arg0, 0,new
				 * Intent(arg0, Object.class), 0); SmsManager sms =
				 * SmsManager.getDefault(); sms.sendTextMessage("15555215556", null,
				 * "kkkkkk", pi, null);
				 */
			sendSms(incomingNumber,"Hello there, I am busy right now, Please call me later");
				
	}
			
		}
		
			

			

		super.onCallStateChanged(state, incomingNumber);
	}

	public void setContext(Context context) {
		this.context = context;
	}

	private void sendSms(String resipiantNo, String text) {
		SMSManager.sendSMS(resipiantNo, text, context);
	}

	public boolean isBlocked(double latitudee, double longtitudee, String name) {
		ArrayList<String> blockedConatctNames = dbhelper.getBlockedSet(dbhelper
				.getProfNameFromCordinates(latitudee, longtitudee));
		if (dbhelper.isThereString(dbhelper.listToArray(blockedConatctNames),
				name)) {
			return true;
		} else {
			return false;
		}
	}

	public String getContactName(final String phoneNumber, ContentResolver cr) {
		Uri uri;
		String[] projection;

		if (Build.VERSION.SDK_INT >= 5) {
			uri = Uri.parse("content://com.android.contacts/phone_lookup");
			projection = new String[] { "display_name" };

		} else {
			uri = Uri.parse("content://contacts/phones/filter");
			projection = new String[] { "name" };

		}

		uri = Uri.withAppendedPath(uri, Uri.encode(phoneNumber));

		String contactName = "";

		Cursor cursor = cr.query(uri, projection, null, null, null);

		if (cursor.moveToFirst()) {
			contactName = cursor.getString(0);
		}

		cursor.close();
		cursor = null;

		return contactName;
	}

}
